types:
  PostId: string
  Age: integer
  BlogPost:
    docs: A blog post
    properties:
      id: PostId
      type: PostType
      title: string
      author: Author
      content: string
  PostType:
    enum:
      - LONG
      - SHORT
      - name: Medium
        value: med.med
  Author:
    union:
      anonymous: {}
      name: string

  GeneratorIdAndVersion:
    properties:
      id: string
      version: string
  PostNotFoundErrorBody:
    properties:
      id: PostId
  UnauthorizedErrorBody:
    properties:
      reason: string

errors:
  PostNotFoundError:
    status-code: 400
    type: PostNotFoundErrorBody
  UnauthorizedError:
    status-code: 403
    type: UnauthorizedErrorBody
  GeneratorsDoNotExistError:
    status-code: 400
    type: list<GeneratorIdAndVersion>

service:
  base-path: /posts
  auth: false
  endpoints:
    createPost:
      docs: Create a new blog post
      method: POST
      path: /create
      request:
        name: CreatePostRequest
        body:
          properties:
            title: string
            author: Author
            content: string
            postType: PostType
            switch: integer
    getPost:
      method: GET
      path: /{postId}
      path-parameters:
        postId: PostId
      response: BlogPost
      errors:
        - PostNotFoundError
