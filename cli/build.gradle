plugins {
    id 'java-library-distribution'
    id "com.palantir.docker" version "0.33.0"
    id "org.unbroken-dome.test-sets" version "4.0.0"
    id 'java'
}

dependencies {
    implementation project(':codegen-utils')
    implementation project(':model-codegen')
    implementation project(':jersey-codegen')
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    implementation 'com.fern-fern.fern:ir-model'
    implementation 'org.immutables:value::annotations'
    implementation 'com.fern:fern-immutables-style'
    implementation 'com.squareup:javapoet'
    implementation 'ch.qos.logback:logback-classic'

    annotationProcessor 'org.immutables:value'

    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'io.github.origin-energy:java-snapshot-testing-junit5'
}

distributions {
    main {
        distributionBaseName = project.name
    }
}

docker {
    name "fern-java:${project.version}"
    tags 'latest', "${project.version}"
    files tasks.distTar.outputs, './init.sh', './build/zip/gradle-resources.zip'
    buildArgs([BUILD_VERSION: "${project.version}"])
}

publishing {
    publications {
        myDistribution(MavenPublication) {
            artifact distZip
        }
    }
    repositories {
        maven {
            url "https://s01.oss.sonatype.org/content/repositories/releases/"
            credentials {
                username "$System.env.FERN_MAVEN_PUBLISH_USERNAME"
                password "$System.env.FERN_MAVEN_PUBLISH_PASSWORD"
            }
        }
    }
}

artifactoryPublish {
    publications('myDistribution')
}

task dockerTagVersion {
    dependsOn ":cli:dockerTag${project.version}"
}

testSets {
    eteTest
}

eteTest {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task zipGradle(type: Zip) {
    from 'gradle-resources/'
    include '**/'
    archiveName 'gradle-resources.zip'
    destinationDirectory = layout.buildDirectory.dir("zip")
}

rootProject.tasks.build.dependsOn eteTest
tasks.eteTest.dependsOn ':cli:dockerTagLatest'
tasks.dockerPrepare.dependsOn tasks.zipGradle
